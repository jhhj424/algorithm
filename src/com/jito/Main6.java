package com.jito;
/*
문제 설명
어떤 회사에서 제품을 만들기 위해 A 부품을 만드는 공장 a개, B 부품을 만드는 공장 b개를 세우려 합니다. 이 회사는 공장을 세울만한 부지 n개를 가지고 있는데, 이중 a + b개만큼의 부지를 선택해서 공장을 세우면 됩니다. 이때, 공장 부지는 2차원 평면상에 있는 점 형태로, 좌표 (x, y)로 표현합니다.

공장을 지을 위치가 잘 결정되었는지의 기준을 인접성 지수라고 하는데, 인접성 지수는 다음과 같이 계산합니다.

같은 부품을 만드는 공장들 간의 거리의 제곱을 모두 계산합니다.
거리는 두 점 사이의 직선거리를 사용합니다.
이 값들 중 최솟값을 인접성 지수라고 합니다.
예를 들어 A 부품 공장을 4개, B 부품 공장을 3개 세울 때, A 부품공장의 위치를 a1, a2, a3, a4, B 부품 공장의 위치를 b1, b2, b3라고 하겠습니다. 이때, A 부품공장에서 서로 다른 두 공장을 선택하는 방법은 다음과 같이 6가지입니다.

1. [a1, a2]
2. [a1, a3]
3. [a1, a4]
4. [a2, a3]
5. [a2, a4]
6. [a3, a4]
또, B 부품공장에서 서로 다른 두 공장을 선택하는 방법은 다음과 같이 3가지입니다.

7. [b1, b2]
8. [b1, b3]
9. [b2, b3]
이제 위의 1 ~ 9에 해당하는 총 9가지 쌍에 대해 거리 제곱을 계산한 값 중 최솟값이 인접성 지수입니다.

공장 부지의 위치를 나타내는 배열 x, y, A 부품 공장의 수 a, B 부품 공장의 수 b가 매개변수로 주어질 때, 인접성 지수가 최대가 되도록 공장을 배치한 후, 그 인접성 지수를 return 하는 solution 함수를 완성해주세요.

제한 사항
배열 x와 y의 길이는 1 이상 10 이하입니다.
x와 y의 길이는 같습니다.
x와 y의 i번 원소는 i번 공장부지의 좌표입니다.
x와 y의 모든 원소는 0 이상 10,000 이하인 정수입니다.
예를 들어 x[i] = X와 y[i] = Y인 경우 i번 공장부지의 좌표는 (X, Y)입니다.
a와 b는 2 이상 4 이하의 자연수입니다.
a + b는 배열 x와 y의 길이보다 작거나 같습니다.
한 공장 부지에는 공장을 하나만 세울 수 있습니다.
입출력 예
x	y	a	b	result
[0, 1, 2, 3, 4]	[0, 1, 2, 3, 4]	2	2	18
[0, 1, 2, 3, 4]	[0, 0, 0, 0, 0]	3	2	4
입출력 예 설명
입출력 예 #1

공장 부지 위치는 (0,0), (1,1), (2,2), (3,3), (4,4)이고, A 부품 공장을 2개 B 부품 공장을 2개 세우려 합니다. A 부품 공장을 (0,0), (4,4), B 부품 공장을 (1,1), (3,3) 위치에 세운다면 인접성 지수는 다음과 같이 계산합니다.

A 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(0,0)	(4,4)	32
B 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(1,1)	(3,3)	8
따라서 위와 같이 공장을 세울 경우, 2가지 쌍 중 최솟값인 8이 인접성 지수가 됩니다.

만약, A 부품 공장을 (0,0), (3,3), B 부품 공장을 (1,1), (4,4) 위치에 세운다면 인접성 지수는 다음과 같이 계산합니다.

A 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(0,0)	(3,3)	18
B 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(1,1)	(4,4)	18
따라서 이 경우에는 2가지 쌍 중 최솟값인 18이 인접성 지수가 됩니다.

이 외에도, 공장을 지을 수 있는 모든 경우를 고려해 봤을 때, 인접성 지수가 18보다 커지도록 공장 부지를 선택하는 방법은 없습니다. 따라서 인접성 지수가 최대가 되도록 공장을 세우는 방법은 다음과 같으며,

A → (0,0), (3,3), B → (1,1), (4,4)
또는

A → (1,1), (4,4), B → (0,0), (3,3)
이때의 인접성 지수인 18을 return 하면 됩니다.

입출력 예 #2

공장 부지 위치는 (0,0), (1,0), (2,0), (3,0), (4,0)이고, A 부품 공장을 3개 B 부품 공장을 2개 세우려 합니다.

A 부품 공장을 (0,0), (1,0), (3,0) B 부품 공장을 (2,0), (4,0) 위치에 세운다면 인접성 지수는 다음과 같이 계산합니다.

A 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(0,0)	(1,0)	1
(0,0)	(3,0)	9
(1,0)	(3,0)	4
B 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(2,0)	(4,0)	4
따라서 위의 4가지 쌍 중 최솟값인 1이 인접성 지수가 됩니다.

만약, A 부품 공장을 (0,0), (2,0), (4,0) B 부품 공장을 (1,0), (3,0) 위치에 세운다면 인접성 지수는 다음과 같이 계산합니다.

A 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(0,0)	(2,0)	4
(0,0)	(4,0)	16
(2,0)	(4,0)	4
B 부품공장에서 서로 다른 두 공장을 선택하는 방법
공장 1	공장 2	두 공장 사이의 거리 제곱
(1,0)	(3,0)	4
따라서 위의 4가지 쌍 중 최솟값인 4가 인접성 지수가 됩니다.

이 외에도, 공장을 지을 수 있는 모든 경우를 고려해 봤을 때, 인접성 지수가 4보다 커지도록 공장 부지를 선택하는 방법은 없습니다. 따라서 인접성 지수가 최대가 되도록 공장을 세우는 방법은 다음과 같으며,

A → (0,0), (2,0), (4,0), B → (1,0), (3,0)
이때의 인접성 지수인 4를 return 하면 됩니다.
 */
public class Main6 {

    public static void main(String[] args) {
    }
}
